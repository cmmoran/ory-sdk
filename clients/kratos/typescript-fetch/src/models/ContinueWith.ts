/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v1.4.0-alpha.0
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ContinueWithRecoveryUi } from './ContinueWithRecoveryUi';
import {
    instanceOfContinueWithRecoveryUi,
    ContinueWithRecoveryUiFromJSON,
    ContinueWithRecoveryUiFromJSONTyped,
    ContinueWithRecoveryUiToJSON,
} from './ContinueWithRecoveryUi';
import type { ContinueWithRedirectBrowserTo } from './ContinueWithRedirectBrowserTo';
import {
    instanceOfContinueWithRedirectBrowserTo,
    ContinueWithRedirectBrowserToFromJSON,
    ContinueWithRedirectBrowserToFromJSONTyped,
    ContinueWithRedirectBrowserToToJSON,
} from './ContinueWithRedirectBrowserTo';
import type { ContinueWithSetOrySessionToken } from './ContinueWithSetOrySessionToken';
import {
    instanceOfContinueWithSetOrySessionToken,
    ContinueWithSetOrySessionTokenFromJSON,
    ContinueWithSetOrySessionTokenFromJSONTyped,
    ContinueWithSetOrySessionTokenToJSON,
} from './ContinueWithSetOrySessionToken';
import type { ContinueWithSettingsUi } from './ContinueWithSettingsUi';
import {
    instanceOfContinueWithSettingsUi,
    ContinueWithSettingsUiFromJSON,
    ContinueWithSettingsUiFromJSONTyped,
    ContinueWithSettingsUiToJSON,
} from './ContinueWithSettingsUi';
import type { ContinueWithVerificationUi } from './ContinueWithVerificationUi';
import {
    instanceOfContinueWithVerificationUi,
    ContinueWithVerificationUiFromJSON,
    ContinueWithVerificationUiFromJSONTyped,
    ContinueWithVerificationUiToJSON,
} from './ContinueWithVerificationUi';

/**
 * @type ContinueWith
 * 
 * @export
 */
export type ContinueWith = { action: 'redirect_browser_to' } & ContinueWithRedirectBrowserTo | { action: 'set_ory_session_token' } & ContinueWithSetOrySessionToken | { action: 'show_recovery_ui' } & ContinueWithRecoveryUi | { action: 'show_settings_ui' } & ContinueWithSettingsUi | { action: 'show_verification_ui' } & ContinueWithVerificationUi;

export function ContinueWithFromJSON(json: any): ContinueWith {
    return ContinueWithFromJSONTyped(json, false);
}

export function ContinueWithFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContinueWith {
    if (json == null) {
        return json;
    }
    switch (json['action']) {
        case 'redirect_browser_to':
            return Object.assign({}, ContinueWithRedirectBrowserToFromJSONTyped(json, true), { action: 'redirect_browser_to' } as const);
        case 'set_ory_session_token':
            return Object.assign({}, ContinueWithSetOrySessionTokenFromJSONTyped(json, true), { action: 'set_ory_session_token' } as const);
        case 'show_recovery_ui':
            return Object.assign({}, ContinueWithRecoveryUiFromJSONTyped(json, true), { action: 'show_recovery_ui' } as const);
        case 'show_settings_ui':
            return Object.assign({}, ContinueWithSettingsUiFromJSONTyped(json, true), { action: 'show_settings_ui' } as const);
        case 'show_verification_ui':
            return Object.assign({}, ContinueWithVerificationUiFromJSONTyped(json, true), { action: 'show_verification_ui' } as const);
        default:
            throw new Error(`No variant of ContinueWith exists with 'action=${json['action']}'`);
    }
}

export function ContinueWithToJSON(json: any): any {
    return ContinueWithToJSONTyped(json, false);
}

export function ContinueWithToJSONTyped(value?: ContinueWith | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['action']) {
        case 'redirect_browser_to':
            return Object.assign({}, ContinueWithRedirectBrowserToToJSON(value), { action: 'redirect_browser_to' } as const);
        case 'set_ory_session_token':
            return Object.assign({}, ContinueWithSetOrySessionTokenToJSON(value), { action: 'set_ory_session_token' } as const);
        case 'show_recovery_ui':
            return Object.assign({}, ContinueWithRecoveryUiToJSON(value), { action: 'show_recovery_ui' } as const);
        case 'show_settings_ui':
            return Object.assign({}, ContinueWithSettingsUiToJSON(value), { action: 'show_settings_ui' } as const);
        case 'show_verification_ui':
            return Object.assign({}, ContinueWithVerificationUiToJSON(value), { action: 'show_verification_ui' } as const);
        default:
            throw new Error(`No variant of ContinueWith exists with 'action=${value['action']}'`);
    }

}

