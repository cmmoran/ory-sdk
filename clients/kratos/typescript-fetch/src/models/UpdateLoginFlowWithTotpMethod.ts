/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v1.4.0-alpha.0
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Update Login Flow with TOTP Method
 * @export
 * @interface UpdateLoginFlowWithTotpMethod
 */
export interface UpdateLoginFlowWithTotpMethod {
    /**
     * Sending the anti-csrf token is only required for browser login flows.
     * @type {string}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    csrf_token?: string;
    /**
     * Method should be set to "totp" when logging in using the TOTP strategy.
     * @type {string}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    method: string;
    /**
     * The TOTP code.
     * @type {string}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    totp_code: string;
    /**
     * Transient data to pass along to any webhooks
     * @type {object}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    transient_payload?: object;
    /**
     * Trust this device
     * @type {boolean}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    trust_device?: boolean;
}

/**
 * Check if a given object implements the UpdateLoginFlowWithTotpMethod interface.
 */
export function instanceOfUpdateLoginFlowWithTotpMethod(value: object): value is UpdateLoginFlowWithTotpMethod {
    if (!('method' in value) || value['method'] === undefined) return false;
    if (!('totp_code' in value) || value['totp_code'] === undefined) return false;
    return true;
}

export function UpdateLoginFlowWithTotpMethodFromJSON(json: any): UpdateLoginFlowWithTotpMethod {
    return UpdateLoginFlowWithTotpMethodFromJSONTyped(json, false);
}

export function UpdateLoginFlowWithTotpMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLoginFlowWithTotpMethod {
    if (json == null) {
        return json;
    }
    return {
        
        'csrf_token': json['csrf_token'] == null ? undefined : json['csrf_token'],
        'method': json['method'],
        'totp_code': json['totp_code'],
        'transient_payload': json['transient_payload'] == null ? undefined : json['transient_payload'],
        'trust_device': json['trust_device'] == null ? undefined : json['trust_device'],
    };
}

export function UpdateLoginFlowWithTotpMethodToJSON(json: any): UpdateLoginFlowWithTotpMethod {
    return UpdateLoginFlowWithTotpMethodToJSONTyped(json, false);
}

export function UpdateLoginFlowWithTotpMethodToJSONTyped(value?: UpdateLoginFlowWithTotpMethod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'csrf_token': value['csrf_token'],
        'method': value['method'],
        'totp_code': value['totp_code'],
        'transient_payload': value['transient_payload'],
        'trust_device': value['trust_device'],
    };
}

